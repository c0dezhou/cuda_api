//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29745058
// Cuda compilation tools, release 11.3, V11.3.58
// Based on NVVM 7.0.1
//

.version 7.3
.target sm_52
.address_size 64

	// .globl	_Z6vecAddPfS_S_
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;

.visible .entry _Z6vecAddPfS_S_(
	.param .u64 _Z6vecAddPfS_S__param_0,
	.param .u64 _Z6vecAddPfS_S__param_1,
	.param .u64 _Z6vecAddPfS_S__param_2
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z6vecAddPfS_S__param_0];
	ld.param.u64 	%rd2, [_Z6vecAddPfS_S__param_1];
	ld.param.u64 	%rd3, [_Z6vecAddPfS_S__param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	mul.wide.s32 	%rd7, %r4, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.f32 	%f2, [%rd9];
	add.f32 	%f3, %f1, %f2;
	add.s64 	%rd10, %rd4, %rd7;
	st.global.f32 	[%rd10], %f3;
	ret;

}
	// .globl	_Z8vecScalePff
.visible .entry _Z8vecScalePff(
	.param .u64 _Z8vecScalePff_param_0,
	.param .f32 _Z8vecScalePff_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z8vecScalePff_param_0];
	ld.param.f32 	%f1, [_Z8vecScalePff_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	mul.wide.s32 	%rd3, %r4, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	mul.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;
	ret;

}
	// .globl	_Z3addiiPi
.visible .entry _Z3addiiPi(
	.param .u32 _Z3addiiPi_param_0,
	.param .u32 _Z3addiiPi_param_1,
	.param .u64 _Z3addiiPi_param_2
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u32 	%r1, [_Z3addiiPi_param_0];
	ld.param.u32 	%r2, [_Z3addiiPi_param_1];
	ld.param.u64 	%rd1, [_Z3addiiPi_param_2];
	cvta.to.global.u64 	%rd2, %rd1;
	add.s32 	%r3, %r2, %r1;
	st.global.u32 	[%rd2], %r3;
	ret;

}
	// .globl	_Z9addKernelPiPKiS1_
.visible .entry _Z9addKernelPiPKiS1_(
	.param .u64 _Z9addKernelPiPKiS1__param_0,
	.param .u64 _Z9addKernelPiPKiS1__param_1,
	.param .u64 _Z9addKernelPiPKiS1__param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd6, [_Z9addKernelPiPKiS1__param_0];
	ld.param.u64 	%rd7, [_Z9addKernelPiPKiS1__param_1];
	ld.param.u64 	%rd8, [_Z9addKernelPiPKiS1__param_2];
	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd8;
	cvta.to.global.u64 	%rd3, %rd7;
	// begin inline asm
	mov.u64 	%rd5, %clock64;
	// end inline asm

$L__BB3_1:
	// begin inline asm
	mov.u64 	%rd9, %clock64;
	// end inline asm
	sub.s64 	%rd10, %rd9, %rd5;
	cvt.rn.f32.s64 	%f1, %rd10;
	div.rn.f32 	%f2, %f1, 0f4ECA0F4C;
	setp.lt.f32 	%p1, %f2, 0f40400000;
	@%p1 bra 	$L__BB3_1;

	mov.u32 	%r1, %tid.x;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd12, %rd3, %rd11;
	add.s64 	%rd13, %rd2, %rd11;
	ld.global.u32 	%r2, [%rd13];
	ld.global.u32 	%r3, [%rd12];
	add.s32 	%r4, %r2, %r3;
	add.s64 	%rd14, %rd1, %rd11;
	st.global.u32 	[%rd14], %r4;
	ret;

}
	// .globl	_Z12delay_devicef
.visible .entry _Z12delay_devicef(
	.param .f32 _Z12delay_devicef_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<5>;


	ld.param.f32 	%f1, [_Z12delay_devicef_param_0];
	// begin inline asm
	mov.u64 	%rd2, %clock64;
	// end inline asm
	setp.leu.f32 	%p1, %f1, 0f00000000;
	@%p1 bra 	$L__BB4_2;

$L__BB4_1:
	// begin inline asm
	mov.u64 	%rd3, %clock64;
	// end inline asm
	sub.s64 	%rd4, %rd3, %rd2;
	cvt.rn.f32.s64 	%f2, %rd4;
	div.rn.f32 	%f3, %f2, 0f4ECA0F4C;
	setp.lt.f32 	%p2, %f3, %f1;
	@%p2 bra 	$L__BB4_1;

$L__BB4_2:
	ret;

}
	// .globl	_Z18arraySelfIncrementPii
.visible .entry _Z18arraySelfIncrementPii(
	.param .u64 _Z18arraySelfIncrementPii_param_0,
	.param .u32 _Z18arraySelfIncrementPii_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z18arraySelfIncrementPii_param_0];
	ld.param.u32 	%r2, [_Z18arraySelfIncrementPii_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u32 	%r6, [%rd4];
	add.s32 	%r7, %r6, 1;
	st.global.u32 	[%rd4], %r7;

$L__BB5_2:
	ret;

}
	// .globl	_Z10add_kernelPfS_S_i
.visible .entry _Z10add_kernelPfS_S_i(
	.param .u64 _Z10add_kernelPfS_S_i_param_0,
	.param .u64 _Z10add_kernelPfS_S_i_param_1,
	.param .u64 _Z10add_kernelPfS_S_i_param_2,
	.param .u32 _Z10add_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10add_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10add_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10add_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10add_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB6_2:
	ret;

}
	// .globl	_Z10mul_kernelPfS_S_i
.visible .entry _Z10mul_kernelPfS_S_i(
	.param .u64 _Z10mul_kernelPfS_S_i_param_0,
	.param .u64 _Z10mul_kernelPfS_S_i_param_1,
	.param .u64 _Z10mul_kernelPfS_S_i_param_2,
	.param .u32 _Z10mul_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10mul_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10mul_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10mul_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10mul_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB7_2:
	ret;

}
	// .globl	_Z10sub_kernelPfS_S_i
.visible .entry _Z10sub_kernelPfS_S_i(
	.param .u64 _Z10sub_kernelPfS_S_i_param_0,
	.param .u64 _Z10sub_kernelPfS_S_i_param_1,
	.param .u64 _Z10sub_kernelPfS_S_i_param_2,
	.param .u32 _Z10sub_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10sub_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10sub_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10sub_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10sub_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB8_2:
	ret;

}
	// .globl	_Z10div_kernelPfS_S_i
.visible .entry _Z10div_kernelPfS_S_i(
	.param .u64 _Z10div_kernelPfS_S_i_param_0,
	.param .u64 _Z10div_kernelPfS_S_i_param_1,
	.param .u64 _Z10div_kernelPfS_S_i_param_2,
	.param .u32 _Z10div_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [_Z10div_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10div_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10div_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10div_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB9_3;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.eq.f32 	%p2, %f1, 0f00000000;
	@%p2 bra 	$L__BB9_3;

	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd5;
	ld.global.f32 	%f2, [%rd10];
	div.rn.f32 	%f3, %f2, %f1;
	add.s64 	%rd11, %rd7, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB9_3:
	ret;

}
	// .globl	_Z14vec_multiply_2Pfi
.visible .entry _Z14vec_multiply_2Pfi(
	.param .u64 _Z14vec_multiply_2Pfi_param_0,
	.param .u32 _Z14vec_multiply_2Pfi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z14vec_multiply_2Pfi_param_0];
	ld.param.u32 	%r2, [_Z14vec_multiply_2Pfi_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	add.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB10_2:
	ret;

}
	// .globl	_Z9vec_add_3Pfi
.visible .entry _Z9vec_add_3Pfi(
	.param .u64 _Z9vec_add_3Pfi_param_0,
	.param .u32 _Z9vec_add_3Pfi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z9vec_add_3Pfi_param_0];
	ld.param.u32 	%r2, [_Z9vec_add_3Pfi_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	add.f32 	%f2, %f1, 0f40400000;
	st.global.f32 	[%rd4], %f2;

$L__BB11_2:
	ret;

}
	// .globl	_Z9vec_sub_1Pfi
.visible .entry _Z9vec_sub_1Pfi(
	.param .u64 _Z9vec_sub_1Pfi_param_0,
	.param .u32 _Z9vec_sub_1Pfi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z9vec_sub_1Pfi_param_0];
	ld.param.u32 	%r2, [_Z9vec_sub_1Pfi_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	add.f32 	%f2, %f1, 0fBF800000;
	st.global.f32 	[%rd4], %f2;

$L__BB12_2:
	ret;

}
	// .globl	_Z22vec_multiply_2_withidxPfii
.visible .entry _Z22vec_multiply_2_withidxPfii(
	.param .u64 _Z22vec_multiply_2_withidxPfii_param_0,
	.param .u32 _Z22vec_multiply_2_withidxPfii_param_1,
	.param .u32 _Z22vec_multiply_2_withidxPfii_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z22vec_multiply_2_withidxPfii_param_0];
	ld.param.u32 	%r2, [_Z22vec_multiply_2_withidxPfii_param_1];
	ld.param.u32 	%r3, [_Z22vec_multiply_2_withidxPfii_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.lt.s32 	%p1, %r1, %r2;
	setp.ge.s32 	%p2, %r1, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	add.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB13_2:
	ret;

}
	// .globl	_Z17vec_add_3_withidxPfii
.visible .entry _Z17vec_add_3_withidxPfii(
	.param .u64 _Z17vec_add_3_withidxPfii_param_0,
	.param .u32 _Z17vec_add_3_withidxPfii_param_1,
	.param .u32 _Z17vec_add_3_withidxPfii_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z17vec_add_3_withidxPfii_param_0];
	ld.param.u32 	%r2, [_Z17vec_add_3_withidxPfii_param_1];
	ld.param.u32 	%r3, [_Z17vec_add_3_withidxPfii_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.lt.s32 	%p1, %r1, %r2;
	setp.ge.s32 	%p2, %r1, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	add.f32 	%f2, %f1, 0f40400000;
	st.global.f32 	[%rd4], %f2;

$L__BB14_2:
	ret;

}
	// .globl	_Z7vec_powPfi
.visible .entry _Z7vec_powPfi(
	.param .u64 _Z7vec_powPfi_param_0,
	.param .u32 _Z7vec_powPfi_param_1
)
{
	.reg .pred 	%p<25>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<20>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [_Z7vec_powPfi_param_0];
	ld.param.u32 	%r6, [_Z7vec_powPfi_param_1];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p2, %r1, %r6;
	@%p2 bra 	$L__BB15_15;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd1];
	cvt.f64.f32 	%fd1, %f1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	mov.f64 	%fd12, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd12;
	}
	and.b32  	%r4, %r3, 2146435072;
	setp.eq.s32 	%p3, %r4, 1062207488;
	abs.f64 	%fd2, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd18, [retval0+0];
	} // callseq 0
	setp.lt.s32 	%p4, %r2, 0;
	and.pred  	%p1, %p4, %p3;
	not.pred 	%p5, %p1;
	@%p5 bra 	$L__BB15_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd18;
	}
	xor.b32  	%r11, %r10, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd18;
	}
	mov.b64 	%fd18, {%r12, %r11};

$L__BB15_3:
	setp.eq.f32 	%p6, %f1, 0f00000000;
	@%p6 bra 	$L__BB15_7;
	bra.uni 	$L__BB15_4;

$L__BB15_7:
	selp.b32 	%r13, %r2, 0, %p3;
	mov.u32 	%r14, 0;
	or.b32  	%r15, %r13, 2146435072;
	setp.lt.s32 	%p10, %r3, 0;
	selp.b32 	%r16, %r15, %r13, %p10;
	mov.b64 	%fd18, {%r14, %r16};
	bra.uni 	$L__BB15_8;

$L__BB15_4:
	setp.gt.s32 	%p7, %r2, -1;
	@%p7 bra 	$L__BB15_8;

	cvt.rzi.f64.f64 	%fd14, %fd12;
	setp.eq.f64 	%p8, %fd14, 0d4000000000000000;
	@%p8 bra 	$L__BB15_8;

	mov.f64 	%fd18, 0dFFF8000000000000;

$L__BB15_8:
	add.f64 	%fd8, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd8;
	}
	and.b32  	%r18, %r17, 2146435072;
	setp.ne.s32 	%p11, %r18, 2146435072;
	mov.f64 	%fd19, %fd18;
	@%p11 bra 	$L__BB15_14;

	setp.gtu.f64 	%p12, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd19, %fd8;
	@%p12 bra 	$L__BB15_14;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd12;
	}
	and.b32  	%r5, %r3, 2147483647;
	setp.eq.s32 	%p13, %r5, 2146435072;
	setp.eq.s32 	%p14, %r19, 0;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	$L__BB15_13;
	bra.uni 	$L__BB15_11;

$L__BB15_13:
	setp.gt.f64 	%p21, %fd2, 0d3FF0000000000000;
	selp.b32 	%r27, 2146435072, 0, %p21;
	mov.u32 	%r28, 0;
	xor.b32  	%r29, %r27, 2146435072;
	setp.lt.s32 	%p22, %r3, 0;
	selp.b32 	%r30, %r29, %r27, %p22;
	setp.eq.f32 	%p23, %f1, 0fBF800000;
	selp.b32 	%r31, 1072693248, %r30, %p23;
	mov.b64 	%fd19, {%r28, %r31};
	bra.uni 	$L__BB15_14;

$L__BB15_11:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd1;
	}
	and.b32  	%r21, %r2, 2147483647;
	setp.ne.s32 	%p16, %r21, 2146435072;
	setp.ne.s32 	%p17, %r20, 0;
	or.pred  	%p18, %p16, %p17;
	mov.f64 	%fd19, %fd18;
	@%p18 bra 	$L__BB15_14;

	setp.gt.s32 	%p19, %r3, -1;
	selp.b32 	%r22, 2146435072, 0, %p19;
	mov.u32 	%r23, 0;
	setp.ne.s32 	%p20, %r5, 1071644672;
	or.b32  	%r24, %r22, -2147483648;
	selp.b32 	%r25, %r24, %r22, %p1;
	selp.b32 	%r26, %r25, %r22, %p20;
	mov.b64 	%fd19, {%r23, %r26};

$L__BB15_14:
	cvt.rn.f32.f64 	%f2, %fd19;
	setp.eq.f32 	%p24, %f1, 0f3F800000;
	selp.f32 	%f3, 0f3F800000, %f2, %p24;
	st.global.f32 	[%rd1], %f3;

$L__BB15_15:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB16_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB16_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB16_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB16_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd15, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd14;
	neg.f64 	%fd17, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd16, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd16, %fd16;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	mov.f64 	%fd40, 0d4000000000000000;
	neg.f64 	%fd41, %fd23;
	fma.rn.f64 	%fd42, %fd41, %fd21, %fd39;
	mul.f64 	%fd43, %fd20, %fd42;
	fma.rn.f64 	%fd44, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd24, %fd37, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd23, %fd23;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd23, %fd23, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd23, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd23;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd23, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd23, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd23, %fd68;
	sub.f64 	%fd72, %fd23, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd40;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd40;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd15;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB16_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB16_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB16_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB16_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB16_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

