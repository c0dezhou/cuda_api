//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29745058
// Cuda compilation tools, release 11.3, V11.3.58
// Based on NVVM 7.0.1
//

.version 7.3
.target sm_52
.address_size 64

	// .globl	_Z6vecAddPfS_S_

.visible .entry _Z6vecAddPfS_S_(
	.param .u64 _Z6vecAddPfS_S__param_0,
	.param .u64 _Z6vecAddPfS_S__param_1,
	.param .u64 _Z6vecAddPfS_S__param_2
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z6vecAddPfS_S__param_0];
	ld.param.u64 	%rd2, [_Z6vecAddPfS_S__param_1];
	ld.param.u64 	%rd3, [_Z6vecAddPfS_S__param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	mul.wide.s32 	%rd7, %r4, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.f32 	%f2, [%rd9];
	add.f32 	%f3, %f1, %f2;
	add.s64 	%rd10, %rd4, %rd7;
	st.global.f32 	[%rd10], %f3;
	ret;

}
	// .globl	_Z8vecScalePff
.visible .entry _Z8vecScalePff(
	.param .u64 _Z8vecScalePff_param_0,
	.param .f32 _Z8vecScalePff_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z8vecScalePff_param_0];
	ld.param.f32 	%f1, [_Z8vecScalePff_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	mul.wide.s32 	%rd3, %r4, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	mul.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;
	ret;

}
	// .globl	_Z3addiiPi
.visible .entry _Z3addiiPi(
	.param .u32 _Z3addiiPi_param_0,
	.param .u32 _Z3addiiPi_param_1,
	.param .u64 _Z3addiiPi_param_2
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u32 	%r1, [_Z3addiiPi_param_0];
	ld.param.u32 	%r2, [_Z3addiiPi_param_1];
	ld.param.u64 	%rd1, [_Z3addiiPi_param_2];
	cvta.to.global.u64 	%rd2, %rd1;
	add.s32 	%r3, %r2, %r1;
	st.global.u32 	[%rd2], %r3;
	ret;

}
	// .globl	_Z9addKernelPiPKiS1_
.visible .entry _Z9addKernelPiPKiS1_(
	.param .u64 _Z9addKernelPiPKiS1__param_0,
	.param .u64 _Z9addKernelPiPKiS1__param_1,
	.param .u64 _Z9addKernelPiPKiS1__param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd6, [_Z9addKernelPiPKiS1__param_0];
	ld.param.u64 	%rd7, [_Z9addKernelPiPKiS1__param_1];
	ld.param.u64 	%rd8, [_Z9addKernelPiPKiS1__param_2];
	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd8;
	cvta.to.global.u64 	%rd3, %rd7;
	// begin inline asm
	mov.u64 	%rd5, %clock64;
	// end inline asm

$L__BB3_1:
	// begin inline asm
	mov.u64 	%rd9, %clock64;
	// end inline asm
	sub.s64 	%rd10, %rd9, %rd5;
	cvt.rn.f32.s64 	%f1, %rd10;
	div.rn.f32 	%f2, %f1, 0f4ECA0F4C;
	setp.lt.f32 	%p1, %f2, 0f40400000;
	@%p1 bra 	$L__BB3_1;

	mov.u32 	%r1, %tid.x;
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd12, %rd3, %rd11;
	add.s64 	%rd13, %rd2, %rd11;
	ld.global.u32 	%r2, [%rd13];
	ld.global.u32 	%r3, [%rd12];
	add.s32 	%r4, %r2, %r3;
	add.s64 	%rd14, %rd1, %rd11;
	st.global.u32 	[%rd14], %r4;
	ret;

}
	// .globl	_Z12delay_devicef
.visible .entry _Z12delay_devicef(
	.param .f32 _Z12delay_devicef_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<5>;


	ld.param.f32 	%f1, [_Z12delay_devicef_param_0];
	// begin inline asm
	mov.u64 	%rd2, %clock64;
	// end inline asm
	setp.leu.f32 	%p1, %f1, 0f00000000;
	@%p1 bra 	$L__BB4_2;

$L__BB4_1:
	// begin inline asm
	mov.u64 	%rd3, %clock64;
	// end inline asm
	sub.s64 	%rd4, %rd3, %rd2;
	cvt.rn.f32.s64 	%f2, %rd4;
	div.rn.f32 	%f3, %f2, 0f4ECA0F4C;
	setp.lt.f32 	%p2, %f3, %f1;
	@%p2 bra 	$L__BB4_1;

$L__BB4_2:
	ret;

}
	// .globl	_Z18arraySelfIncrementPii
.visible .entry _Z18arraySelfIncrementPii(
	.param .u64 _Z18arraySelfIncrementPii_param_0,
	.param .u32 _Z18arraySelfIncrementPii_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z18arraySelfIncrementPii_param_0];
	ld.param.u32 	%r2, [_Z18arraySelfIncrementPii_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u32 	%r6, [%rd4];
	add.s32 	%r7, %r6, 1;
	st.global.u32 	[%rd4], %r7;

$L__BB5_2:
	ret;

}
	// .globl	_Z10add_kernelPfS_S_i
.visible .entry _Z10add_kernelPfS_S_i(
	.param .u64 _Z10add_kernelPfS_S_i_param_0,
	.param .u64 _Z10add_kernelPfS_S_i_param_1,
	.param .u64 _Z10add_kernelPfS_S_i_param_2,
	.param .u32 _Z10add_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10add_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10add_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10add_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10add_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB6_2:
	ret;

}
	// .globl	_Z10mul_kernelPfS_S_i
.visible .entry _Z10mul_kernelPfS_S_i(
	.param .u64 _Z10mul_kernelPfS_S_i_param_0,
	.param .u64 _Z10mul_kernelPfS_S_i_param_1,
	.param .u64 _Z10mul_kernelPfS_S_i_param_2,
	.param .u32 _Z10mul_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10mul_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10mul_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10mul_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10mul_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB7_2:
	ret;

}
	// .globl	_Z10sub_kernelPfS_S_i
.visible .entry _Z10sub_kernelPfS_S_i(
	.param .u64 _Z10sub_kernelPfS_S_i_param_0,
	.param .u64 _Z10sub_kernelPfS_S_i_param_1,
	.param .u64 _Z10sub_kernelPfS_S_i_param_2,
	.param .u32 _Z10sub_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z10sub_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10sub_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10sub_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10sub_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB8_2:
	ret;

}
	// .globl	_Z10div_kernelPfS_S_i
.visible .entry _Z10div_kernelPfS_S_i(
	.param .u64 _Z10div_kernelPfS_S_i_param_0,
	.param .u64 _Z10div_kernelPfS_S_i_param_1,
	.param .u64 _Z10div_kernelPfS_S_i_param_2,
	.param .u32 _Z10div_kernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [_Z10div_kernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z10div_kernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z10div_kernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z10div_kernelPfS_S_i_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB9_3;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.eq.f32 	%p2, %f1, 0f00000000;
	@%p2 bra 	$L__BB9_3;

	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd5;
	ld.global.f32 	%f2, [%rd10];
	div.rn.f32 	%f3, %f2, %f1;
	add.s64 	%rd11, %rd7, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB9_3:
	ret;

}

